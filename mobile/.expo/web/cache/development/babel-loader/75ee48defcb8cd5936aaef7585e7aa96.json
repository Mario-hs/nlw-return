{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ArrowLeft } from \"phosphor-react-native\";\nimport { captureScreen } from \"react-native-view-shot\";\nimport * as FileSytem from 'expo-file-system';\nimport { ScreenshotButton } from \"../../components/ScreenshotButton\";\nimport { Button } from \"../../components/Button\";\nimport { styles } from \"./styles\";\nimport { theme } from \"../../theme\";\nimport { feedbackTypes } from \"../../utils/feedbackTypes\";\nimport { api } from \"../../libs/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Form(_ref) {\n  var feedbackType = _ref.feedbackType,\n      onFeedbackCanceled = _ref.onFeedbackCanceled,\n      onFeedbackSend = _ref.onFeedbackSend;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSendingFeedback = _useState2[0],\n      setIsSendingFeedback = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      screenshot = _useState4[0],\n      setScreenShot = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      comment = _useState6[0],\n      setComment = _useState6[1];\n\n  var feedbackTypeInfo = feedbackTypes[feedbackType];\n\n  function handleScreenshot() {\n    captureScreen({\n      format: 'jpg',\n      quality: 0.8\n    }).then(function (uri) {\n      return setScreenShot(uri);\n    }).catch(function (error) {\n      return console.error(error);\n    });\n  }\n\n  function handleScreenshotRemove() {\n    setScreenShot(null);\n  }\n\n  function handleSendFeedback() {\n    var screenshotBase64;\n    return _regeneratorRuntime.async(function handleSendFeedback$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!isSendingFeedback) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            setIsSendingFeedback(true);\n            _context.t0 = screenshot;\n\n            if (!_context.t0) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(FileSytem.readAsStringAsync(screenshot, {\n              encoding: 'base64'\n            }));\n\n          case 7:\n            _context.t0 = _context.sent;\n\n          case 8:\n            screenshotBase64 = _context.t0;\n            _context.prev = 9;\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(api.post('/feedbacks', {\n              type: feedbackType,\n              screenshot: \"data: image/png;base64, \" + screenshotBase64,\n              comment: comment\n            }));\n\n          case 12:\n            onFeedbackSend();\n            _context.next = 19;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t1 = _context[\"catch\"](9);\n            console.error(_context.t1);\n            setIsSendingFeedback(false);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[9, 15]], Promise);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(TouchableOpacity, {\n        onPress: onFeedbackCanceled,\n        children: _jsx(ArrowLeft, {\n          size: 24,\n          weight: \"bold\",\n          color: theme.colors.text_secondary\n        })\n      }), _jsxs(View, {\n        style: styles.titleContainer,\n        children: [_jsx(Image, {\n          source: feedbackTypeInfo.image,\n          style: styles.image\n        }), _jsx(Text, {\n          style: styles.titleText,\n          children: feedbackTypeInfo.title\n        })]\n      })]\n    }), _jsx(TextInput, {\n      multiline: true,\n      style: styles.input,\n      placeholder: \"Algo n\\xE3o est\\xE1 funcionando bem? Queremos corrigir. Conte com detalhes o que est\\xE1 acontecendo...\",\n      placeholderTextColor: theme.colors.text_secondary,\n      autoCorrect: false,\n      onChangeText: setComment\n    }), _jsxs(View, {\n      style: styles.footer,\n      children: [_jsx(ScreenshotButton, {\n        onTakeShot: handleScreenshot,\n        onRemoveShot: handleScreenshotRemove,\n        screenshot: screenshot\n      }), _jsx(Button, {\n        onPress: handleSendFeedback,\n        isLoading: isSendingFeedback\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","ArrowLeft","captureScreen","FileSytem","ScreenshotButton","Button","styles","theme","feedbackTypes","api","Form","feedbackType","onFeedbackCanceled","onFeedbackSend","isSendingFeedback","setIsSendingFeedback","screenshot","setScreenShot","comment","setComment","feedbackTypeInfo","handleScreenshot","format","quality","then","uri","catch","error","console","handleScreenshotRemove","handleSendFeedback","readAsStringAsync","encoding","screenshotBase64","post","type","container","header","colors","text_secondary","titleContainer","image","titleText","title","input","footer"],"sources":["/Users/mario_hs/Desktop/Mario/Estudos/nlw/web/mobile/src/components/Form/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, TextInput, Image, Text, TouchableOpacity, KeyboardAvoidingView, Platform } from \"react-native\";\nimport { ArrowLeft } from \"phosphor-react-native\";\nimport { captureScreen } from \"react-native-view-shot\";\nimport * as FileSytem from 'expo-file-system';\n\nimport { FeedbackType } from \"../../components/Widget\";\nimport { ScreenshotButton } from \"../../components/ScreenshotButton\";\nimport { Button } from \"../../components/Button\";\n\nimport { styles } from \"./styles\";\nimport { theme } from \"../../theme\";\nimport { feedbackTypes } from \"../../utils/feedbackTypes\"\nimport { api } from \"../../libs/api\";\n\ninterface Props {\n    feedbackType: FeedbackType;\n    onFeedbackCanceled: () => void;\n    onFeedbackSend: () => void;\n}\n\nexport function Form({ feedbackType, onFeedbackCanceled, onFeedbackSend }: Props) {\n    const [isSendingFeedback, setIsSendingFeedback] = useState(false);\n    const [screenshot, setScreenShot] = useState<string | null>(null);\n    const [comment, setComment] = useState('')\n\n    const feedbackTypeInfo = feedbackTypes[feedbackType];\n\n    function handleScreenshot() {\n        captureScreen({\n            format: 'jpg',\n            quality: 0.8\n        }).then(uri => setScreenShot(uri)).catch(error => console.error(error));\n    }\n\n    function handleScreenshotRemove() {\n        setScreenShot(null);\n    }\n\n    async function handleSendFeedback() {\n        if (isSendingFeedback) {\n            return;\n        }\n        setIsSendingFeedback(true);\n        const screenshotBase64 = screenshot && await FileSytem.readAsStringAsync(screenshot, { encoding: 'base64' });\n\n        try {\n            await api.post('/feedbacks', {\n                type: feedbackType,\n                screenshot: `data: image/png;base64, ${screenshotBase64}`,\n                comment\n            })\n\n            onFeedbackSend();\n        } catch (error) {\n            console.error(error);\n            setIsSendingFeedback(false)\n        }\n    }\n\n    return (\n        <View style={styles.container}>\n\n            <View style={styles.header}>\n\n                <TouchableOpacity onPress={onFeedbackCanceled}>\n\n                    <ArrowLeft size={24} weight=\"bold\" color={theme.colors.text_secondary} />\n\n                </TouchableOpacity>\n\n                <View style={styles.titleContainer}>\n                    <Image source={feedbackTypeInfo.image} style={styles.image} />\n                    <Text style={styles.titleText}>\n                        {feedbackTypeInfo.title}\n                    </Text>\n                </View>\n\n            </View>\n\n            <TextInput\n                multiline\n                style={styles.input}\n                placeholder=\"Algo não está funcionando bem? Queremos corrigir. Conte com detalhes o que está acontecendo...\"\n                placeholderTextColor={theme.colors.text_secondary}\n                autoCorrect={false}\n                onChangeText={setComment}\n            />\n\n            <View style={styles.footer}>\n                <ScreenshotButton\n                    onTakeShot={handleScreenshot}\n                    onRemoveShot={handleScreenshotRemove}\n                    screenshot={screenshot}\n                />\n\n                <Button onPress={handleSendFeedback} isLoading={isSendingFeedback} />\n            </View>\n\n        </View>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}